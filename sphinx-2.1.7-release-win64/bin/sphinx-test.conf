#
# Sphinx configuration file sample
#
# WARNING! While this sample file mentions all available options,
# it contains (very) short helper descriptions only. Please refer to
# doc/sphinx.html for details.
#

###############################################################
## data source definition
###############################################################

source s_tit
{
# 資料來源的類型。必要設定項，沒有預設值。
# 已知類型 mysql , pgsql , xmlpipe , xmlpipe2。
type           = mysql

# SQL 主機連接的 IP。必要設定項，沒有預設值。
# 僅適用於SQL數據源（mysql,pgsql）。
sql_host       = localhost

# SQL 主機連接的 port 選擇性設定，預設 mysql(3306)，及 pgsql(5432)。
# 僅適用於SQL數據源（mysql,pgsql）。
# 這個設定必須依附在 sql_host 下。
sql_port       = 3306  # optional, default is 3306

# 資料庫用戶名稱，必要設定項，沒有預設值。
sql_user       = root

# 資料庫用戶密碼，必要設定項，沒有預設值。
sql_pass       = 

# 資料庫名稱，必要設定項，沒有預設值。
sql_db         = sphinx_test

# 資料庫 local 端連結介面，選擇性設定，預設為空。
#sql_sock       = /tmp/mysql.sock 

# MySQL 傳輸壓縮，可將索引建立時的傳輸量，預設為 0(不壓縮)。
#mysql_connect_flags = 32


# 預先查詢。選擇性，可重複，預設是空。僅適用於SQL數據源（mysql,pgsql）。
# 可用來做索引前的初始設定，如編碼設定、緩衝區大小、是否快取暫存
sql_query_pre  = SET NAMES utf8
sql_query_pre  = SET SESSION query_cache_type=OFF


# 主要文件擷取查詢。必要設定項，沒有預設值。僅適用於SQL數據源（mysql,pgsql）。
# 查詢指令允許使用 JOIN 及子查詢，對於資料表不能使用 AS，但資料欄位可以
sql_query      = SELECT * FROM `blog_texts`


# 設定過濾條目，被設定的欄位將不會列入索引的範圍，之後可以作為查詢時的過濾條件，0.9.8版支援下列類型。
sql_attr_timestamp   = InsertDate
# sql_attr_uint = BlogId
# sql_field_string = Text
# sql_attr_string = Text
# sql_field_string = Text

#sql_attr_bool = is_deleted # will be packed to 1 bit
#sql_attr_str2ordinal = author_name
#sql_attr_float = long_radians 
#sql_attr_multi = uint tag from ranged-query; \
#   SELECT id, tag FROM tags WHERE id>=$start AND id<=$end; \
#   SELECT MIN(id), MAX(id) FROM tags


# 與 sql_query_pre 的功能相同，但用於索引結束後呼叫的指令  
#sql_query_post = DROP TABLE my_tmp_table


sql_query_info       =SELECT * FROM `blog_texts` WHERE `BlogId`=$id

}

#------------------------------------------------------------------------
source s_txt
{
type           = mysql
sql_host       = localhost
sql_user       = root
sql_pass       = 
sql_db         = sphinx_test
sql_port       = 3306
sql_query_pre  = SET NAMES utf8
sql_query_pre  = SET SESSION query_cache_type=OFF
sql_query      = SELECT * FROM `blog_texts`

sql_attr_timestamp   = InsertDate
# sql_attr_string = Text
# sql_field_string = Title

sql_ranged_throttle  = 0
sql_query_info       =SELECT * FROM `blog_texts` WHERE `BlogId`=$id
}

#------------------------------------------------------------------------
source s_comment
{
type           = mysql
sql_host       = localhost
sql_user       = root
sql_pass       = 
sql_db         = sphinx_test
sql_port       = 3306
sql_query_pre  = SET NAMES utf8
sql_query_pre  = SET group_concat_max_len=1048576
sql_query_pre  = SET SESSION query_cache_type=OFF
sql_query     = \
SELECT \
`blog_comments`.`BlogId`, \
GROUP_CONCAT(`blog_comments`.`Text`)AS`CommentText`, \
COUNT(`blog_comments`.`BlogId`)AS`CommentNum`, \
`blog_texts`.`InsertDate` \
FROM \
`blog_texts` \
INNER JOIN \
`blog_comments` \
ON `blog_texts`.`BlogId`=`blog_comments`.`BlogId` \
GROUP BY `blog_comments`.`BlogId` \

sql_attr_uint        = CommentNum
sql_attr_timestamp   = InsertDate

sql_ranged_throttle  = 0
sql_query_info       =SELECT * FROM `blog_texts` WHERE `BlogId`=$id
}





###############################################################
### index definition
###############################################################

index s_tit
{
# 索引類型。預設為空（索引為簡單本地索引）。設定值有空字串或 "distributed"
#type           = distributed

# 指定索引的來源，必須是上面的來源名稱
source          = s_tit


# 索引記錄存放的目錄
path            = C:/Python27/sphinx/data/s_tit


# 文件屬性值存儲模式，預設值為 extern，可設定的屬性有 'none', 'extern' 及 'inline'. 
docinfo         = extern 


# 鎖定記憶體緩衝區段。預設為 0(不鎖定)
mlock           = 0


# 適用的形態前置處理器名單。預設為空(不應用任何前處理器)。
# 可設定的屬性有 'none', 'stem_en', 'stem_ru', 'stem_enru', 'soundex', and 'metaphone'.
# 這段在中文情況下不能使用，否則會導致無法啟動 searchd 服務。
morphology      = none


# 停用詞文件清單(以空白分隔)，預設為空。
# 在清單中的 word 將不會加到索引庫裡。
#stopwords      = /usr/local/sphinx/data/stopwords.txt


# 詞形字典，預設為空。可以設定 word 之間的關連性。
# wordforms.txt 
#   walks > walk
#   walked > walk
#   walking > walk
#
#wordforms      = /usr/local/sphinx/data/wordforms.txt

# 保留字例外文件，預設為空。
# exceptions.txt
#   MS Windows => ms windows
#   Microsoft Windows => ms windows
#   C++ => cplusplus
#   c++ => cplusplus
#   C plus plus => cplusplus
#
#exceptions     = /usr/local/sphinx/data/exceptions.txt

# exceptions 與 wordforms 的區別
#  *exceptions 是區分大小寫的， wordforms沒有;
#  *exceptions 允許檢測序列標記， wordforms 只能處理單一的 word;
#  *exceptions 可以使用 charset_table 中沒有的特殊符號，wordforms 完全遵從 charset_table 中的字符;
#  *exceptions 在大字典上性能會下降，wordforms 則對百萬級的條目應對自如;  



# 最短的關鍵字長度
min_word_len    = 1 


# 編碼格式
charset_type    = utf-8


# 指定 UTF-8 的編碼表



# 指明分詞法讀取詞典文件的位置，當啟用分詞法時，為必填項。
# 在使用 LibMMSeg 作為分詞庫時，需要確保詞典文件uni.lib在指定的目錄下。
# 再使用 LibMMSeg 分詞外掛時，這個設定值才有效，不然在建立索引時會出錯。
#charset_dictpath = dict


# 忽略的字符列表，預設為空。
#ignore_chars   = U+AD


# 索引的最小前綴長度，預設為0（不索引前綴）。
#min_prefix_len = 3


# 索引的最小中綴長度，預設為0（不索引中綴）。
#min_infix_len  = 3


# 做前綴索引的字段列表，預設為空（所有字段均為前綴索引模式）。
#prefix_fields  = url, domain


# 做中綴索引的字段列表，預設為空（所有字段均為中綴索引模式）。
#infix_fields   = url, domain


# 允許前綴/中綴索引上的星號語法（或稱萬用字符）預設為 0（不使用通配符），這是為了與0.9.7版本的兼容性。設定值有 0 和 1。
enable_star     = 1


#分詞，設定值有 0,1，如果要搜索中文，請指定為 1
ngram_len       = 1


# 分詞字符，中文搜索必要設定。
ngram_chars     = U+4E00..U+9FBF,U+3400..U+4DBF,U+20000..U+2A6DF,\
U+F900..U+FAFF,U+2F800..U+2FA1F,U+2E80..U+2EFF,U+2F00..U+2FDF,\
U+3100..U+312F,U+31A0..U+31BF,U+3040..U+309F,U+30A0..U+30FF,\
U+31F0..U+31FF,U+AC00..U+D7AF,U+1100..U+11FF,U+3130..U+318F,\
U+A000..U+A48F,U+A490..U+A4CF


# 短語邊界字符列表，預設為空。 
#phrase_boundary = ., ?, !, U+2026


# 是否從輸入全文數據中去除 HTML 標記。預設為 0。設定值有 0（禁用），1（啟用）。 
html_strip      = 0


# 去除 HTML 標籤時要索引標籤語言的屬性列表，預設為空（不索引標記語言屬性）。
# 指定被保留並索引的 HTML 標記語言屬性，即使其他 HTML 標記被刪除。
html_index_attrs      = img=alt,title; a=title;


# HTML 標籤列表，不僅這些標籤本身會被刪除，標籤之間的文字內容也會被刪除。預設為空（不刪除任何元素的內容）。 
html_remove_elements  = style, script
}

index dist_tit
{
# 索引類型。預設為空（索引為簡單本地索引）。設定值有空字串或 "distributed"
type            = distributed


# 分佈式索引(distributed index)中的本地索引聲明，可以設定多個，預設為空。
local           = s_tit


# 分佈式索引(distributed index)中的遠程代理和索引聲明，可以設定多個，預設為空。 
agent           = localhost:3313:remote1
agent           = localhost:3314:remote2,remote3


# 遠程代理的最大連接時間，單位為毫秒，預設為 1000（1 sec）。
agent_connect_timeout  = 1000


# 遠程代理的最大查詢時間，單位為毫秒，預設為 3000（3 sec）。
agent_query_timeout    = 3000


# 預先開啟全部索引文件還是每次查詢時再開啟索引。預設為0（不預先開啟）。
#preopen        = 1
}


#------------------------------------------------------------------------
index s_txt
{
source          = s_txt
path            = C:/Python27/sphinx/data/s_txt
docinfo         = extern
mlock           = 0
morphology      = none
min_word_len    = 1 
charset_type    = utf-8

ngram_len       = 1
ngram_chars     = U+4E00..U+9FBF,U+3400..U+4DBF,U+20000..U+2A6DF,\
U+F900..U+FAFF,U+2F800..U+2FA1F,U+2E80..U+2EFF,U+2F00..U+2FDF,\
U+3100..U+312F,U+31A0..U+31BF,U+3040..U+309F,U+30A0..U+30FF,\
U+31F0..U+31FF,U+AC00..U+D7AF,U+1100..U+11FF,U+3130..U+318F,\
U+A000..U+A48F,U+A490..U+A4CF

html_strip      = 0
html_index_attrs    = img=alt,title; a=title;
html_remove_elements  = style, script
}
index dist_txt
{
type            = distributed
local           = s_txt
agent           = localhost:3313:remote1
agent           = localhost:3314:remote2,remote3
agent_connect_timeout  = 1000
agent_query_timeout    = 3000
}



#------------------------------------------------------------------------
index s_comment
{
source          = s_comment
path            = C:/Python27/sphinx/data/s_comment
docinfo         = extern
mlock           = 0
morphology      = none
min_word_len    = 1
charset_type    = utf-8

ngram_len       = 1
ngram_chars     = U+4E00..U+9FBF,U+3400..U+4DBF,U+20000..U+2A6DF,\
U+F900..U+FAFF,U+2F800..U+2FA1F,U+2E80..U+2EFF,U+2F00..U+2FDF,\
U+3100..U+312F,U+31A0..U+31BF,U+3040..U+309F,U+30A0..U+30FF,\
U+31F0..U+31FF,U+AC00..U+D7AF,U+1100..U+11FF,U+3130..U+318F,\
U+A000..U+A48F,U+A490..U+A4CF

html_strip      = 0
html_index_attrs    = img=alt,title; a=title;
html_remove_elements  = style, script
}
index dist_comment
{
type            = distributed
local           = s_comment
agent           = localhost:3313:remote1
agent           = localhost:3314:remote2,remote3
agent_connect_timeout  = 1000
agent_query_timeout    = 3000
}



###############################################################
### indexer settings
###############################################################

indexer
{
# 索引過程中記憶體的使用限制，預設為 32M。
mem_limit       = 64M

# 每秒最大 I/O 操作次數，用於限制 I/O 操作。預設為0（無限制）。
#max_iops       = 40

# 最大單次允許的 I/O 操作大小，以 bytes 為單位，用於I/O節流。預設為0（不限制）。
#max_iosize     = 1048576
}



###############################################################
### searchd settings
###############################################################

searchd
{
# 監聽來源 IP，預設為0.0.0.0（即允許所有 IP 連結）。
#address        = 127.0.0.1


# searchd 的 TCP port。預設為 3312。
listen            = 3312


# log 的紀錄文件位址，全部 searchd 運行時事件會被記錄在這個日誌文件中。 
log             = C:/Python27/sphinx/log/searchd.log


# 查詢日誌文件名，預設為空（不記錄查詢日誌）。
# 全部搜索查詢會被記錄在此文件中。
query_log       = C:/Python27/sphinx/log/query.log


# 最大的查詢請求時間，單位是秒。預設是5秒。
# searchd 將強制關閉在此時間內未能成功發出查詢的客戶端連接。 
read_timeout    = 5


# 並行執行的搜索的數目。預設為0（無限制）。
max_children    = 30


# searchd 進程 ID 文件名。必選項。
pid_file        = C:/Python27/sphinx/log/searchd.pid


# 守護進程在記憶體中為每個索引所保持並返回給客戶端的匹配數目的最大值。預設為1000
max_matches     = 1000


# 防止 searchd 輪換在需要預取大量數據的索引時停止響應。預設為1（啟用無縫（seamless）輪換）
seamless_rotate = 1


# 是否在啟動時強制重新打開所有索引文件。預設為0（不重新打開）。
preopen_indexes = 0


# 索引輪換成功之後，是否刪除以.old為擴展名的索引拷貝。預設為1（刪除這些索引拷貝）。
unlink_old      = 1
}

# --eof--
